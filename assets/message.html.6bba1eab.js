var T=Object.defineProperty;var x=Object.getOwnPropertySymbols;var F=Object.prototype.hasOwnProperty,C=Object.prototype.propertyIsEnumerable;var d=(e,a,o)=>a in e?T(e,a,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[a]=o,b=(e,a)=>{for(var o in a||(a={}))F.call(a,o)&&d(e,o,a[o]);if(x)for(var o of x(a))C.call(a,o)&&d(e,o,a[o]);return e};import{_ as M,r as m,o as B,c as E,b as g,w as f,F as D,d as s,e as n,a as V,V as w}from"./app.f37c7bd0.js";const N={name:"component-doc",components:{"render-demo-0":function(){const{createTextVNode:e,resolveComponent:a,withCtx:o,createVNode:r,openBlock:c,createElementBlock:k}=w,l=e("Message"),i=e("Toast");function _(p,h){const t=a("cc-button");return c(),k("div",null,[r(t,{type:"success",onClick:p.openMessage},{default:o(()=>[l]),_:1},8,["onClick"]),r(t,{type:"success",onClick:p.openToast},{default:o(()=>[i]),_:1},8,["onClick"])])}const{getCurrentInstance:y}=w;return b({render:_},{setup(p,{expose:h}){h();const{proxy:t}=y(),v=()=>{t.Message.success({text:"text"})},u={proxy:t,openMessage:v,openToast:()=>{t.Toast.success({text:"text",success(){v()}})},getCurrentInstance:y};return Object.defineProperty(u,"__isScriptSetup",{enumerable:!1,value:!0}),u}})}()}},A=s("h1",{id:"message",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#message","aria-hidden":"true"},"#"),n(" Message")],-1),I=s("p",null,[s("em",null,"\u7528\u4E8E\u63D0\u793A\u7528\u6237")],-1),$=s("h4",{id:"\u9ED8\u8BA4",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u9ED8\u8BA4","aria-hidden":"true"},"#"),n(" \u9ED8\u8BA4")],-1),O=s("div",{class:"language-vue"},[s("pre",{class:"shiki",style:{"background-color":"var(--shiki-color-background)"}},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"<"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"template"),s("span",{style:{color:"var(--shiki-color-text)"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"  <"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"div"),s("span",{style:{color:"var(--shiki-color-text)"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"    <"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"cc-button"),s("span",{style:{color:"var(--shiki-color-text)"}}," "),s("span",{style:{color:"var(--shiki-token-function)"}},"type"),s("span",{style:{color:"var(--shiki-color-text)"}},"="),s("span",{style:{color:"var(--shiki-token-string-expression)"}},'"success"'),s("span",{style:{color:"var(--shiki-color-text)"}}," "),s("span",{style:{color:"var(--shiki-token-keyword)"}},"@"),s("span",{style:{color:"var(--shiki-token-function)"}},"click"),s("span",{style:{color:"var(--shiki-token-keyword)"}},"="),s("span",{style:{color:"var(--shiki-color-text)"}},'"'),s("span",{style:{color:"var(--shiki-color-text)"}},"openMessage"),s("span",{style:{color:"var(--shiki-color-text)"}},'"'),s("span",{style:{color:"var(--shiki-color-text)"}},">Message</"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"cc-button"),s("span",{style:{color:"var(--shiki-color-text)"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"    <"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"cc-button"),s("span",{style:{color:"var(--shiki-color-text)"}}," "),s("span",{style:{color:"var(--shiki-token-function)"}},"type"),s("span",{style:{color:"var(--shiki-color-text)"}},"="),s("span",{style:{color:"var(--shiki-token-string-expression)"}},'"success"'),s("span",{style:{color:"var(--shiki-color-text)"}}," "),s("span",{style:{color:"var(--shiki-token-keyword)"}},"@"),s("span",{style:{color:"var(--shiki-token-function)"}},"click"),s("span",{style:{color:"var(--shiki-token-keyword)"}},"="),s("span",{style:{color:"var(--shiki-color-text)"}},'"'),s("span",{style:{color:"var(--shiki-color-text)"}},"openToast"),s("span",{style:{color:"var(--shiki-color-text)"}},'"'),s("span",{style:{color:"var(--shiki-color-text)"}},">Toast</"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"cc-button"),s("span",{style:{color:"var(--shiki-color-text)"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"  </"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"div"),s("span",{style:{color:"var(--shiki-color-text)"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"</"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"template"),s("span",{style:{color:"var(--shiki-color-text)"}},">")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"<"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"script"),s("span",{style:{color:"var(--shiki-color-text)"}}," "),s("span",{style:{color:"var(--shiki-token-function)"}},"setup"),s("span",{style:{color:"var(--shiki-color-text)"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"  "),s("span",{style:{color:"var(--shiki-token-keyword)"}},"import"),s("span",{style:{color:"var(--shiki-color-text)"}}," { getCurrentInstance } "),s("span",{style:{color:"var(--shiki-token-keyword)"}},"from"),s("span",{style:{color:"var(--shiki-color-text)"}}," "),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"'vue'")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"  "),s("span",{style:{color:"var(--shiki-token-keyword)"}},"const"),s("span",{style:{color:"var(--shiki-color-text)"}}," { "),s("span",{style:{color:"var(--shiki-token-constant)"}},"proxy"),s("span",{style:{color:"var(--shiki-color-text)"}}," } "),s("span",{style:{color:"var(--shiki-token-keyword)"}},"="),s("span",{style:{color:"var(--shiki-color-text)"}}," "),s("span",{style:{color:"var(--shiki-token-function)"}},"getCurrentInstance"),s("span",{style:{color:"var(--shiki-color-text)"}},"()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"  "),s("span",{style:{color:"var(--shiki-token-keyword)"}},"const"),s("span",{style:{color:"var(--shiki-color-text)"}}," "),s("span",{style:{color:"var(--shiki-token-function)"}},"openMessage"),s("span",{style:{color:"var(--shiki-color-text)"}}," "),s("span",{style:{color:"var(--shiki-token-keyword)"}},"="),s("span",{style:{color:"var(--shiki-color-text)"}}," () "),s("span",{style:{color:"var(--shiki-token-keyword)"}},"=>"),s("span",{style:{color:"var(--shiki-color-text)"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"    "),s("span",{style:{color:"var(--shiki-token-constant)"}},"proxy"),s("span",{style:{color:"var(--shiki-token-function)"}},"."),s("span",{style:{color:"var(--shiki-token-constant)"}},"Message"),s("span",{style:{color:"var(--shiki-token-function)"}},".success"),s("span",{style:{color:"var(--shiki-color-text)"}},"({")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"      text"),s("span",{style:{color:"var(--shiki-token-keyword)"}},":"),s("span",{style:{color:"var(--shiki-color-text)"}}," "),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"'text'")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"    })")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"  }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"  "),s("span",{style:{color:"var(--shiki-token-keyword)"}},"const"),s("span",{style:{color:"var(--shiki-color-text)"}}," "),s("span",{style:{color:"var(--shiki-token-function)"}},"openToast"),s("span",{style:{color:"var(--shiki-color-text)"}}," "),s("span",{style:{color:"var(--shiki-token-keyword)"}},"="),s("span",{style:{color:"var(--shiki-color-text)"}}," () "),s("span",{style:{color:"var(--shiki-token-keyword)"}},"=>"),s("span",{style:{color:"var(--shiki-color-text)"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"    "),s("span",{style:{color:"var(--shiki-token-constant)"}},"proxy"),s("span",{style:{color:"var(--shiki-token-function)"}},"."),s("span",{style:{color:"var(--shiki-token-constant)"}},"Toast"),s("span",{style:{color:"var(--shiki-token-function)"}},".success"),s("span",{style:{color:"var(--shiki-color-text)"}},"({")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"      text"),s("span",{style:{color:"var(--shiki-token-keyword)"}},":"),s("span",{style:{color:"var(--shiki-color-text)"}}," "),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"'text'"),s("span",{style:{color:"var(--shiki-token-punctuation)"}},",")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"      "),s("span",{style:{color:"var(--shiki-token-function)"}},"success"),s("span",{style:{color:"var(--shiki-color-text)"}},"() {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"        "),s("span",{style:{color:"var(--shiki-token-function)"}},"openMessage"),s("span",{style:{color:"var(--shiki-color-text)"}},"()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"      }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"    })")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"  }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"</"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"script"),s("span",{style:{color:"var(--shiki-color-text)"}},">")]),n(`
`),s("span",{class:"line"})])])],-1),S=V(`<h4 id="message\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#message\u5C5E\u6027" aria-hidden="true">#</a> message\u5C5E\u6027</h4><table><thead><tr><th>\u5C5E\u6027</th><th style="text-align:center;">\u63CF\u8FF0</th><th style="text-align:right;">\u7C7B\u578B</th><th style="text-align:center;">\u53EF\u9009\u503C</th><th style="text-align:right;">\u9ED8\u8BA4</th></tr></thead><tbody><tr><td>type</td><td style="text-align:center;">\u63D0\u793A\u7C7B\u578B</td><td style="text-align:right;"><code>string</code></td><td style="text-align:center;"><code>success</code>,<code>error</code>,<code>warn</code>,<code>default</code></td><td style="text-align:right;"><code>default</code></td></tr><tr><td>text</td><td style="text-align:center;">\u63D0\u793A\u5185\u5BB9</td><td style="text-align:right;"><code>string</code></td><td style="text-align:center;"><code>-</code></td><td style="text-align:right;"><code>-</code></td></tr><tr><td>top</td><td style="text-align:center;">\u8DDD\u79BB\u9876\u90E8\u8DDD\u79BB</td><td style="text-align:right;"><code>string</code></td><td style="text-align:center;"><code>-</code></td><td style="text-align:right;"><code>15</code></td></tr></tbody></table><h4 id="\u6E90\u7801" tabindex="-1"><a class="header-anchor" href="#\u6E90\u7801" aria-hidden="true">#</a> \u6E90\u7801</h4><div class="language-tsx ext-tsx line-numbers-mode"><pre class="shiki" style="background-color:var(--shiki-color-background);"><code><span class="line"><span style="color:var(--shiki-token-comment);">// message</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> Message </span><span style="color:var(--shiki-token-keyword);">from</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;./message&#39;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> { ToastFnType } </span><span style="color:var(--shiki-token-keyword);">from</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;../toast/toastFn&#39;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> { createTypeFn } </span><span style="color:var(--shiki-token-keyword);">from</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;../utils/helper&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">MessageFn</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ToastFnType</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-function);">default</span><span style="color:var(--shiki-color-text);">(opts) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-function);">createTypeFn</span><span style="color:var(--shiki-color-text);">(Message</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;default&#39;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> opts)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  }</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-function);">error</span><span style="color:var(--shiki-color-text);">(opts) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-function);">createTypeFn</span><span style="color:var(--shiki-color-text);">(Message</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;error&#39;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> opts)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  }</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-function);">success</span><span style="color:var(--shiki-color-text);">(opts) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-function);">createTypeFn</span><span style="color:var(--shiki-color-text);">(Message</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;success&#39;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> opts)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  }</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-function);">warn</span><span style="color:var(--shiki-color-text);">(opts) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-function);">createTypeFn</span><span style="color:var(--shiki-color-text);">(Message</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;warn&#39;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> opts)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">export</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">default</span><span style="color:var(--shiki-color-text);"> MessageFn</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// toast</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> Toast </span><span style="color:var(--shiki-token-keyword);">from</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;./toast&#39;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> { Type } </span><span style="color:var(--shiki-token-keyword);">from</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;../utils/theme&#39;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> createTypeFn</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> { OptsType } </span><span style="color:var(--shiki-token-keyword);">from</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;../utils/helper/createTypeFn&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">export</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">type</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ToastFnType</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  [</span><span style="color:var(--shiki-token-function);">key</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">in</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">Type</span><span style="color:var(--shiki-color-text);">]</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> (opts</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">OptsType</span><span style="color:var(--shiki-color-text);">) </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">void</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ToastFn</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ToastFnType</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-function);">default</span><span style="color:var(--shiki-color-text);">(opts) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-function);">createTypeFn</span><span style="color:var(--shiki-color-text);">(Toast</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;default&#39;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> opts)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  }</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-function);">error</span><span style="color:var(--shiki-color-text);">(opts) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-function);">createTypeFn</span><span style="color:var(--shiki-color-text);">(Toast</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;error&#39;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> opts)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  }</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-function);">success</span><span style="color:var(--shiki-color-text);">(opts) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-function);">createTypeFn</span><span style="color:var(--shiki-color-text);">(Toast</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;success&#39;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> opts)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  }</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-function);">warn</span><span style="color:var(--shiki-color-text);">(opts) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-function);">createTypeFn</span><span style="color:var(--shiki-color-text);">(Toast</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;warn&#39;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> opts)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">export</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">default</span><span style="color:var(--shiki-color-text);"> ToastFn;</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div>`,4);function j(e,a,o,r,c,k){const l=m("render-demo-0"),i=m("demo");return B(),E(D,null,[A,I,$,g(i,{customClass:"",sourceCode:`<template>
  <div>
    <cc-button type="success" @click="openMessage">Message</cc-button>
    <cc-button type="success" @click="openToast">Toast</cc-button>
  </div>
</template>

<script setup>
  import { getCurrentInstance } from 'vue'
  const { proxy } = getCurrentInstance()
  const openMessage = () => {
    proxy.Message.success({
      text: 'text'
    })
  }
  const openToast = () => {
    proxy.Toast.success({
      text: 'text',
      success() {
        openMessage()
      }
    })
  }
<\/script>
`},{highlight:f(()=>[O]),default:f(()=>[g(l)]),_:1}),S],64)}var H=M(N,[["render",j]]);export{H as default};
