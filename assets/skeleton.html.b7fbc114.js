var g=Object.defineProperty;var m=Object.getOwnPropertySymbols;var w=Object.prototype.hasOwnProperty,f=Object.prototype.propertyIsEnumerable;var b=(e,o,a)=>o in e?g(e,o,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[o]=a,x=(e,o)=>{for(var a in o||(o={}))w.call(o,a)&&b(e,a,o[a]);if(m)for(var a of m(o))f.call(o,a)&&b(e,a,o[a]);return e};import{_,r as u,o as C,c as E,b as i,w as p,F as B,d as s,e as n,a as F,V as d}from"./app.f37c7bd0.js";const S={name:"component-doc",components:{"render-demo-0":function(){const{resolveComponent:e,createVNode:o,withCtx:a,openBlock:t,createElementBlock:r}=d;function y(l,c){const k=e("cc-skeleton-item"),v=e("cc-skeleton");return t(),r("div",null,[o(v,{loading:!0,animated:!0},{default:a(()=>[o(k,{variable:"text"})]),_:1})])}return x({render:y},{})}(),"render-demo-1":function(){const{resolveComponent:e,createVNode:o,openBlock:a,createElementBlock:t}=d;function r(h,l){const c=e("cc-skeleton");return a(),t("div",null,[o(c,{loading:!0,animated:!0,rows:3})])}return x({render:r},{})}(),"render-demo-2":function(){const{resolveComponent:e,createVNode:o,openBlock:a,createElementBlock:t}=d;function r(h,l){const c=e("cc-skeleton");return a(),t("div",null,[o(c,{loading:!0,animated:!0,rows:3,rowsWidth:["200px","150px","100px"]})])}return x({render:r},{})}(),"render-demo-3":function(){const{resolveComponent:e,createVNode:o,withCtx:a,openBlock:t,createElementBlock:r}=d;function y(l,c){const k=e("cc-skeleton-item"),v=e("cc-skeleton");return t(),r("div",null,[o(v,{loading:!0,animated:!0},{default:a(()=>[o(k,{variable:"rect"}),o(k,{variable:"h"}),o(k,{variable:"button"})]),_:1})])}return x({render:y},{})}()}},A=s("h1",{id:"skeleton",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#skeleton","aria-hidden":"true"},"#"),n(" Skeleton")],-1),V=s("p",null,[s("em",null,"\u7528\u4E8E\u586B\u5145\u6570\u636E")],-1),N=s("h4",{id:"\u9ED8\u8BA4",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u9ED8\u8BA4","aria-hidden":"true"},"#"),n(" \u9ED8\u8BA4")],-1),D=s("div",{class:"language-vue"},[s("pre",{class:"shiki",style:{"background-color":"var(--shiki-color-background)"}},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"<"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"template"),s("span",{style:{color:"var(--shiki-color-text)"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"  <"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"div"),s("span",{style:{color:"var(--shiki-color-text)"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"    <"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"cc-skeleton"),s("span",{style:{color:"var(--shiki-color-text)"}}," "),s("span",{style:{color:"var(--shiki-token-keyword)"}},":"),s("span",{style:{color:"var(--shiki-token-function)"}},"loading"),s("span",{style:{color:"var(--shiki-token-keyword)"}},"="),s("span",{style:{color:"var(--shiki-color-text)"}},'"'),s("span",{style:{color:"var(--shiki-token-constant)"}},"true"),s("span",{style:{color:"var(--shiki-color-text)"}},'"'),s("span",{style:{color:"var(--shiki-color-text)"}}," "),s("span",{style:{color:"var(--shiki-token-keyword)"}},":"),s("span",{style:{color:"var(--shiki-token-function)"}},"animated"),s("span",{style:{color:"var(--shiki-token-keyword)"}},"="),s("span",{style:{color:"var(--shiki-color-text)"}},'"'),s("span",{style:{color:"var(--shiki-token-constant)"}},"true"),s("span",{style:{color:"var(--shiki-color-text)"}},'"'),s("span",{style:{color:"var(--shiki-color-text)"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"      <"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"cc-skeleton-item"),s("span",{style:{color:"var(--shiki-color-text)"}}," "),s("span",{style:{color:"var(--shiki-token-function)"}},"variable"),s("span",{style:{color:"var(--shiki-color-text)"}},"="),s("span",{style:{color:"var(--shiki-token-string-expression)"}},'"text"'),s("span",{style:{color:"var(--shiki-color-text)"}},"></"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"cc-skeleton-item"),s("span",{style:{color:"var(--shiki-color-text)"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"    </"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"cc-skeleton"),s("span",{style:{color:"var(--shiki-color-text)"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"  </"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"div"),s("span",{style:{color:"var(--shiki-color-text)"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"</"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"template"),s("span",{style:{color:"var(--shiki-color-text)"}},">")]),n(`
`),s("span",{class:"line"})])])],-1),T=s("h4",{id:"\u591A\u884C",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u591A\u884C","aria-hidden":"true"},"#"),n(" \u591A\u884C")],-1),W=s("div",{class:"language-vue"},[s("pre",{class:"shiki",style:{"background-color":"var(--shiki-color-background)"}},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"<"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"template"),s("span",{style:{color:"var(--shiki-color-text)"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"  <"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"div"),s("span",{style:{color:"var(--shiki-color-text)"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"    <"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"cc-skeleton"),s("span",{style:{color:"var(--shiki-color-text)"}}," "),s("span",{style:{color:"var(--shiki-token-keyword)"}},":"),s("span",{style:{color:"var(--shiki-token-function)"}},"loading"),s("span",{style:{color:"var(--shiki-token-keyword)"}},"="),s("span",{style:{color:"var(--shiki-color-text)"}},'"'),s("span",{style:{color:"var(--shiki-token-constant)"}},"true"),s("span",{style:{color:"var(--shiki-color-text)"}},'"'),s("span",{style:{color:"var(--shiki-color-text)"}}," "),s("span",{style:{color:"var(--shiki-token-keyword)"}},":"),s("span",{style:{color:"var(--shiki-token-function)"}},"animated"),s("span",{style:{color:"var(--shiki-token-keyword)"}},"="),s("span",{style:{color:"var(--shiki-color-text)"}},'"'),s("span",{style:{color:"var(--shiki-token-constant)"}},"true"),s("span",{style:{color:"var(--shiki-color-text)"}},'"'),s("span",{style:{color:"var(--shiki-color-text)"}}," "),s("span",{style:{color:"var(--shiki-token-keyword)"}},":"),s("span",{style:{color:"var(--shiki-token-function)"}},"rows"),s("span",{style:{color:"var(--shiki-token-keyword)"}},"="),s("span",{style:{color:"var(--shiki-color-text)"}},"3>")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"    </"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"cc-skeleton"),s("span",{style:{color:"var(--shiki-color-text)"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"  </"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"div"),s("span",{style:{color:"var(--shiki-color-text)"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"</"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"template"),s("span",{style:{color:"var(--shiki-color-text)"}},">")]),n(`
`),s("span",{class:"line"})])])],-1),R=s("h4",{id:"\u8BBE\u7F6E\u957F\u5EA6",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u8BBE\u7F6E\u957F\u5EA6","aria-hidden":"true"},"#"),n(" \u8BBE\u7F6E\u957F\u5EA6")],-1),q=s("div",{class:"language-vue"},[s("pre",{class:"shiki",style:{"background-color":"var(--shiki-color-background)"}},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"<"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"template"),s("span",{style:{color:"var(--shiki-color-text)"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"  <"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"div"),s("span",{style:{color:"var(--shiki-color-text)"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"    <"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"cc-skeleton"),s("span",{style:{color:"var(--shiki-color-text)"}}," "),s("span",{style:{color:"var(--shiki-token-keyword)"}},":"),s("span",{style:{color:"var(--shiki-token-function)"}},"loading"),s("span",{style:{color:"var(--shiki-token-keyword)"}},"="),s("span",{style:{color:"var(--shiki-color-text)"}},'"'),s("span",{style:{color:"var(--shiki-token-constant)"}},"true"),s("span",{style:{color:"var(--shiki-color-text)"}},'"'),s("span",{style:{color:"var(--shiki-color-text)"}}," "),s("span",{style:{color:"var(--shiki-token-keyword)"}},":"),s("span",{style:{color:"var(--shiki-token-function)"}},"animated"),s("span",{style:{color:"var(--shiki-token-keyword)"}},"="),s("span",{style:{color:"var(--shiki-color-text)"}},'"'),s("span",{style:{color:"var(--shiki-token-constant)"}},"true"),s("span",{style:{color:"var(--shiki-color-text)"}},'"'),s("span",{style:{color:"var(--shiki-color-text)"}}," "),s("span",{style:{color:"var(--shiki-token-keyword)"}},":"),s("span",{style:{color:"var(--shiki-token-function)"}},"rows"),s("span",{style:{color:"var(--shiki-token-keyword)"}},"="),s("span",{style:{color:"var(--shiki-color-text)"}},"3 "),s("span",{style:{color:"var(--shiki-token-keyword)"}},":"),s("span",{style:{color:"var(--shiki-token-function)"}},"rowsWidth"),s("span",{style:{color:"var(--shiki-token-keyword)"}},"="),s("span",{style:{color:"var(--shiki-color-text)"}},'"'),s("span",{style:{color:"var(--shiki-color-text)"}},"["),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"'200px'"),s("span",{style:{color:"var(--shiki-token-punctuation)"}},","),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"'150px'"),s("span",{style:{color:"var(--shiki-token-punctuation)"}},","),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"'100px'"),s("span",{style:{color:"var(--shiki-color-text)"}},"]"),s("span",{style:{color:"var(--shiki-color-text)"}},'"'),s("span",{style:{color:"var(--shiki-color-text)"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"    </"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"cc-skeleton"),s("span",{style:{color:"var(--shiki-color-text)"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"  </"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"div"),s("span",{style:{color:"var(--shiki-color-text)"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"</"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"template"),s("span",{style:{color:"var(--shiki-color-text)"}},">")]),n(`
`),s("span",{class:"line"})])])],-1),I=s("h4",{id:"\u5176\u4ED6\u7C7B\u578B",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u5176\u4ED6\u7C7B\u578B","aria-hidden":"true"},"#"),n(" \u5176\u4ED6\u7C7B\u578B")],-1),P=s("div",{class:"language-vue"},[s("pre",{class:"shiki",style:{"background-color":"var(--shiki-color-background)"}},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"<"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"template"),s("span",{style:{color:"var(--shiki-color-text)"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"  <"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"div"),s("span",{style:{color:"var(--shiki-color-text)"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"    <"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"cc-skeleton"),s("span",{style:{color:"var(--shiki-color-text)"}}," "),s("span",{style:{color:"var(--shiki-token-keyword)"}},":"),s("span",{style:{color:"var(--shiki-token-function)"}},"loading"),s("span",{style:{color:"var(--shiki-token-keyword)"}},"="),s("span",{style:{color:"var(--shiki-color-text)"}},'"'),s("span",{style:{color:"var(--shiki-token-constant)"}},"true"),s("span",{style:{color:"var(--shiki-color-text)"}},'"'),s("span",{style:{color:"var(--shiki-color-text)"}}," "),s("span",{style:{color:"var(--shiki-token-keyword)"}},":"),s("span",{style:{color:"var(--shiki-token-function)"}},"animated"),s("span",{style:{color:"var(--shiki-token-keyword)"}},"="),s("span",{style:{color:"var(--shiki-color-text)"}},'"'),s("span",{style:{color:"var(--shiki-token-constant)"}},"true"),s("span",{style:{color:"var(--shiki-color-text)"}},'"'),s("span",{style:{color:"var(--shiki-color-text)"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"      <"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"cc-skeleton-item"),s("span",{style:{color:"var(--shiki-color-text)"}}," "),s("span",{style:{color:"var(--shiki-token-function)"}},"variable"),s("span",{style:{color:"var(--shiki-color-text)"}},"="),s("span",{style:{color:"var(--shiki-token-string-expression)"}},'"rect"'),s("span",{style:{color:"var(--shiki-color-text)"}},"></"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"cc-skeleton-item"),s("span",{style:{color:"var(--shiki-color-text)"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"      <"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"cc-skeleton-item"),s("span",{style:{color:"var(--shiki-color-text)"}}," "),s("span",{style:{color:"var(--shiki-token-function)"}},"variable"),s("span",{style:{color:"var(--shiki-color-text)"}},"="),s("span",{style:{color:"var(--shiki-token-string-expression)"}},'"h"'),s("span",{style:{color:"var(--shiki-color-text)"}},"></"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"cc-skeleton-item"),s("span",{style:{color:"var(--shiki-color-text)"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"      <"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"cc-skeleton-item"),s("span",{style:{color:"var(--shiki-color-text)"}}," "),s("span",{style:{color:"var(--shiki-token-function)"}},"variable"),s("span",{style:{color:"var(--shiki-color-text)"}},"="),s("span",{style:{color:"var(--shiki-token-string-expression)"}},'"button"'),s("span",{style:{color:"var(--shiki-color-text)"}},"></"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"cc-skeleton-item"),s("span",{style:{color:"var(--shiki-color-text)"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"    </"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"cc-skeleton"),s("span",{style:{color:"var(--shiki-color-text)"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"  </"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"div"),s("span",{style:{color:"var(--shiki-color-text)"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"var(--shiki-color-text)"}},"</"),s("span",{style:{color:"var(--shiki-token-string-expression)"}},"template"),s("span",{style:{color:"var(--shiki-color-text)"}},">")]),n(`
`),s("span",{class:"line"})])])],-1),$=F(`<h4 id="skeleton\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#skeleton\u5C5E\u6027" aria-hidden="true">#</a> skeleton\u5C5E\u6027</h4><table><thead><tr><th>\u5C5E\u6027</th><th style="text-align:center;">\u63CF\u8FF0</th><th style="text-align:right;">\u7C7B\u578B</th><th style="text-align:center;">\u53EF\u9009\u503C</th><th style="text-align:right;">\u9ED8\u8BA4</th></tr></thead><tbody><tr><td>rows</td><td style="text-align:center;">\u6E32\u67D3\u591A\u884C</td><td style="text-align:right;"><code>number</code></td><td style="text-align:center;"><code>-</code></td><td style="text-align:right;"><code>0</code></td></tr><tr><td>rowsWidth</td><td style="text-align:center;">\u6E32\u67D3\u591A\u884C\u7684\u5BBD\u5EA6</td><td style="text-align:right;"><code>string[]</code>,<code>number[]</code></td><td style="text-align:center;"><code>-</code></td><td style="text-align:right;"><code>-</code></td></tr><tr><td>loading</td><td style="text-align:center;">\u662F\u5426\u663E\u793A</td><td style="text-align:right;"><code>boolean</code></td><td style="text-align:center;"><code>true</code>,<code>false</code></td><td style="text-align:right;"><code>false</code></td></tr></tbody></table><h4 id="skeleton-item\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#skeleton-item\u5C5E\u6027" aria-hidden="true">#</a> skeleton-item\u5C5E\u6027</h4><table><thead><tr><th>\u5C5E\u6027</th><th style="text-align:center;">\u63CF\u8FF0</th><th style="text-align:right;">\u7C7B\u578B</th><th style="text-align:center;">\u53EF\u9009\u503C</th><th style="text-align:right;">\u9ED8\u8BA4</th></tr></thead><tbody><tr><td>variable</td><td style="text-align:center;">skeleton\u7C7B\u578B</td><td style="text-align:right;"><code>string</code></td><td style="text-align:center;"><code>variable-type</code></td><td style="text-align:right;"><code>text</code></td></tr></tbody></table><h4 id="\u7C7B\u578B\u53C2\u8003" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u53C2\u8003" aria-hidden="true">#</a> \u7C7B\u578B\u53C2\u8003</h4><table><thead><tr><th>\u7C7B\u578B</th><th style="text-align:left;">\u53EF\u9009\u503C</th></tr></thead><tbody><tr><td>variable-type</td><td style="text-align:left;"><code>p</code>,<code>text</code>,<code>h</code>,<code>rect</code>,<code>circle</code>,<code>image</code>,<code>button</code>,<code>caption</code></td></tr></tbody></table><h4 id="\u6E90\u7801" tabindex="-1"><a class="header-anchor" href="#\u6E90\u7801" aria-hidden="true">#</a> \u6E90\u7801</h4><div class="language-tsx ext-tsx line-numbers-mode"><pre class="shiki" style="background-color:var(--shiki-color-background);"><code><span class="line"><span style="color:var(--shiki-token-comment);">// skeleton</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  CSSProperties</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  defineComponent</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  PropType</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  reactive</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">} </span><span style="color:var(--shiki-token-keyword);">from</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;vue&#39;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> CcSkeletonItem </span><span style="color:var(--shiki-token-keyword);">from</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;../skeleton-item/skeletonItem&#39;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> { useContext } </span><span style="color:var(--shiki-token-keyword);">from</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;../utils/hooks&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">type</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">RowsWidthType</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">string</span><span style="color:var(--shiki-color-text);">[] </span><span style="color:var(--shiki-token-keyword);">|</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">number</span><span style="color:var(--shiki-color-text);">[]</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">CcSkeleton</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">defineComponent</span><span style="color:var(--shiki-color-text);">({</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  name</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;cc-skeleton&#39;</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  components</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> {CcSkeletonItem}</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  props</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    loading</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      type</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Boolean</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      default</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">false</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    rows</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      type</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Number</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      default</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    rowsWidth</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      type</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Array</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">as</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">PropType</span><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-function);">RowsWidthType</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    animated</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      type</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Boolean</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      default</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">false</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  }</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-function);">setup</span><span style="color:var(--shiki-color-text);">(props</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> { slots }) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">useContext</span><span style="color:var(--shiki-token-function);">.getContext</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&#39;animated&#39;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">props</span><span style="color:var(--shiki-color-text);">.animated)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">styles</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> (index</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">number</span><span style="color:var(--shiki-color-text);">) </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">style</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-string-expression);">&#39;--w&#39;</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">props</span><span style="color:var(--shiki-color-text);">.rowsWidth </span><span style="color:var(--shiki-token-keyword);">?</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">props</span><span style="color:var(--shiki-color-text);">.rowsWidth</span><span style="color:var(--shiki-token-keyword);">!</span><span style="color:var(--shiki-color-text);">[index] </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;200px&#39;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      } </span><span style="color:var(--shiki-token-keyword);">as</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">CSSProperties</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> style</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">renderRows</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> () </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">skeletonRows</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">reactive</span><span style="color:var(--shiki-color-text);">([] </span><span style="color:var(--shiki-token-keyword);">as</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">JSX</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-function);">Element</span><span style="color:var(--shiki-color-text);">[])</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">for</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">let</span><span style="color:var(--shiki-color-text);"> i </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);">; i </span><span style="color:var(--shiki-token-keyword);">&lt;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">props</span><span style="color:var(--shiki-color-text);">.rows; i</span><span style="color:var(--shiki-token-keyword);">++</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">useContext</span><span style="color:var(--shiki-token-function);">.getContext</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&#39;w&#39;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> i)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">skeletonRows</span><span style="color:var(--shiki-token-function);">.push</span><span style="color:var(--shiki-color-text);">(&lt;</span><span style="color:var(--shiki-token-constant);">CcSkeletonItem</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">variable</span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;text&quot;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">style</span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);">{</span><span style="color:var(--shiki-token-function);">styles</span><span style="color:var(--shiki-color-text);">(i)} /&gt;)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">skeletonRows</span><span style="color:var(--shiki-token-function);">.map</span><span style="color:var(--shiki-color-text);">(s </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> s)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">row</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> () </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">props</span><span style="color:var(--shiki-color-text);">.rows </span><span style="color:var(--shiki-token-keyword);">?</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">renderRows</span><span style="color:var(--shiki-color-text);">() </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">slots</span><span style="color:var(--shiki-token-function);">.default?.</span><span style="color:var(--shiki-color-text);">()</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> () </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> (</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      &lt;</span><span style="color:var(--shiki-token-string-expression);">div</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">class</span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;cc-skeleton&quot;</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        {</span><span style="color:var(--shiki-token-constant);">props</span><span style="color:var(--shiki-color-text);">.loading </span><span style="color:var(--shiki-token-keyword);">&amp;&amp;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">row</span><span style="color:var(--shiki-color-text);">()}</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      &lt;/</span><span style="color:var(--shiki-token-string-expression);">div</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    )</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">export</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">default</span><span style="color:var(--shiki-color-text);"> CcSkeleton;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// skeleton-item</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  defineComponent</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  PropType</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">} </span><span style="color:var(--shiki-token-keyword);">from</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;vue&#39;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;./skeleton-item.scss&#39;</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> { useStyle</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> useContext } </span><span style="color:var(--shiki-token-keyword);">from</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;../utils/hooks&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">type</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">VariableType</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;p&#39;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">|</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;text&#39;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">|</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;h&#39;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">|</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;rect&#39;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">|</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;circle&#39;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">|</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;image&#39;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">|</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;button&#39;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">|</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;caption&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">CcSkeletonItem</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">defineComponent</span><span style="color:var(--shiki-color-text);">({</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  name</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;cc-skeleton-item&#39;</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  props</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    variable</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      type</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">String</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">as</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">PropType</span><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-function);">VariableType</span><span style="color:var(--shiki-color-text);">&gt;</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      default</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;text&#39;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  }</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-function);">setup</span><span style="color:var(--shiki-color-text);">(props) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">animated</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">useContext</span><span style="color:var(--shiki-token-function);">.setContext</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&#39;animated&#39;</span><span style="color:var(--shiki-color-text);">)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">w</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">useContext</span><span style="color:var(--shiki-token-function);">.setContext</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&#39;w&#39;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;200px&#39;</span><span style="color:var(--shiki-color-text);">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">hMap</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-string-expression);">&#39;button&#39;</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;40px&#39;</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-string-expression);">&#39;caption&#39;</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;30px&#39;</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-string-expression);">&#39;circle&#39;</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> w</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-string-expression);">&#39;h&#39;</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;20px&#39;</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-string-expression);">&#39;image&#39;</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;200px&#39;</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-string-expression);">&#39;p&#39;</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;15px&#39;</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-string-expression);">&#39;rect&#39;</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;100px&#39;</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-string-expression);">&#39;text&#39;</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;15px&#39;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    } </span><span style="color:var(--shiki-token-keyword);">as</span><span style="color:var(--shiki-color-text);"> {[k</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">string</span><span style="color:var(--shiki-color-text);">]</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">string</span><span style="color:var(--shiki-color-text);">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">styles</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">useStyle</span><span style="color:var(--shiki-color-text);">({</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-string-expression);">&#39;--w&#39;</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> w</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-string-expression);">&#39;--h&#39;</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> hMap[</span><span style="color:var(--shiki-token-constant);">props</span><span style="color:var(--shiki-color-text);">.variable]</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-string-expression);">&#39;--r&#39;</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">props</span><span style="color:var(--shiki-color-text);">.variable </span><span style="color:var(--shiki-token-keyword);">===</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;circle&#39;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">?</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;50%&#39;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;5px&#39;</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-string-expression);">&#39;--animation&#39;</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> animated </span><span style="color:var(--shiki-token-keyword);">?</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;loading .8s infinite ease&#39;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;&#39;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    })</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> () </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> (</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      &lt;</span><span style="color:var(--shiki-token-string-expression);">div</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">class</span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;cc-skeleton-item&quot;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">style</span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);">{styles}&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      &lt;/</span><span style="color:var(--shiki-token-string-expression);">div</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    )</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">export</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">default</span><span style="color:var(--shiki-color-text);"> CcSkeletonItem;</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br></div></div>`,8);function M(e,o,a,t,r,y){const h=u("render-demo-0"),l=u("demo"),c=u("render-demo-1"),k=u("render-demo-2"),v=u("render-demo-3");return C(),E(B,null,[A,V,N,i(l,{customClass:"",sourceCode:`<template>
  <div>
    <cc-skeleton :loading="true" :animated="true">
      <cc-skeleton-item variable="text"></cc-skeleton-item>
    </cc-skeleton>
  </div>
</template>
`},{highlight:p(()=>[D]),default:p(()=>[i(h)]),_:1}),T,i(l,{customClass:"",sourceCode:`<template>
  <div>
    <cc-skeleton :loading="true" :animated="true" :rows=3>
    </cc-skeleton>
  </div>
</template>
`},{highlight:p(()=>[W]),default:p(()=>[i(c)]),_:1}),R,i(l,{customClass:"",sourceCode:`<template>
  <div>
    <cc-skeleton :loading="true" :animated="true" :rows=3 :rowsWidth="['200px','150px','100px']">
    </cc-skeleton>
  </div>
</template>
`},{highlight:p(()=>[q]),default:p(()=>[i(k)]),_:1}),I,i(l,{customClass:"",sourceCode:`<template>
  <div>
    <cc-skeleton :loading="true" :animated="true">
      <cc-skeleton-item variable="rect"></cc-skeleton-item>
      <cc-skeleton-item variable="h"></cc-skeleton-item>
      <cc-skeleton-item variable="button"></cc-skeleton-item>
    </cc-skeleton>
  </div>
</template>
`},{highlight:p(()=>[P]),default:p(()=>[i(v)]),_:1}),$],64)}var X=_(S,[["render",M]]);export{X as default};
